 #Definition of nodes
# addr address for node
# tls_ca_cert tls cert
peer1: &peer1
  addr: localhost:7051
  tls_ca_cert: ../network/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp/tlscacerts/tlsca.org1.example.com-cert.pem
  org: org1

peer2: &peer2
  addr: localhost:9051
  tls_ca_cert: ../network/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/msp/tlscacerts/tlsca.org2.example.com-cert.pem
  org: org2

orderer1: &orderer1
  addr: localhost:7050
  tls_ca_cert: ../network/organizations/ordererOrganizations/example.com/msp/tlscacerts/tlsca.example.com-cert.pem
  org: org1


policyFile: ./test/andLogic.rego

# Peer Nodes to interact with as endorsement Peers
endorsers:
  - *peer1
  - *peer2

# Peer Nodes to interact with as Commit Peers as listening
committers: 
  - *peer1
  - *peer2
# we might support multi-committer in the future for more complex test scenario.
# i.e. consider tx committed only if it's done on >50% of nodes. 
# Give your commit Threshold as numbers for peers here.
commitThreshold: 2

# orderer Nodes to interact with
orderer: *orderer1

# 通道和链码信息
channel: mychannel
chaincode: trace

# 链码函数和参数
fcn: SubmitOffer
args:
  - randomString8
  - randomString8
  - "0.6"  # 价格在0.4-1元之间
  - "100"  # 数量
  - "true" # 是否为卖方
  - randomString8
# Tx submiter information
mspid: Org1MSP
private_key: ../network/organizations/peerOrganizations/org1.example.com/users/User1@org1.example.com/msp/keystore/priv_sk
sign_cert: ../network/organizations/peerOrganizations/org1.example.com/users/User1@org1.example.com/msp/signcerts/User1@org1.example.com-cert.pem
# # 压力测试配置
# duration: 30s          # 测试持续时间
# rateControl:
#   type: fixed-rate     # 固定速率模式
#   transactionsPerSec: 0  # 0表示不限制TPS，由线程数决定
# workers: 10            # 线程数

# network traffic control
num_of_conn: 10
client_per_conn: 10